/*! coi-serviceworker v0.1.6 - Guido Zuidhof, licensed under MIT */
let coepCredentialless=!1;"undefined"!=typeof window&&(window.chrome||window.safari)&&(coepCredentialless=!0);const serviceWorkerOptions={credentials:coepCredentialless?"omit":"same-origin"};let isServiceWorkerLoaded=!1,serviceWorkerRegistration=null;function parseHeaders(e){const r={};return e.split(/\r?\n/).forEach((e=>{const t=e.split(": ");t.length>1&&(r[t[0]]=t.slice(1).join(": "))})),r}async function requestListener(e){if(e.request.cache==="only-if-cached"&&e.request.mode!=="same-origin")return;const r=new URL(e.request.url);if(r.protocol!=="https:"&&r.protocol!=="http:")return;const t=await fetch(e.request.url,serviceWorkerOptions);if(t.status===0)return;const s=parseHeaders(t.headers.get("cross-origin-embedder-policy")||""),o=parseHeaders(t.headers.get("cross-origin-opener-policy")||"");return s["cross-origin-embedder-policy"]="require-corp",o["cross-origin-opener-policy"]="same-origin",new Response(t.body,{status:t.status,statusText:t.statusText,headers:{...Object.fromEntries(t.headers),"Cross-Origin-Embedder-Policy":Object.entries(s).map((([e,r])=>`${e}=${r}`)).join(", "),"Cross-Origin-Opener-Policy":Object.entries(o).map((([e,r])=>`${e}=${r}`)).join(", ")}})}self.addEventListener("install",(()=>{self.skipWaiting()})),self.addEventListener("activate",(e=>{e.waitUntil(self.clients.claim())})),self.addEventListener("fetch",((e,r)=>{try{e.respondWith(requestListener(e))}catch(e){console.error("Fetch error:",e)}}));
